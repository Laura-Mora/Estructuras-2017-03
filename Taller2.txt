Laura Juliana  Mora P‡ez
mora_laura@javeriana.edu.co

Funci—n 1:
void f1 ( long vec1[], int n, long mat1[][], int x, int y ) { 
   int l = 0;                                     // 1
   for ( int i = 0; i < x; i++ )           //1+(x+1)+(x*1) 
     for ( int j = 0; j < y; j++ )        //x(1+(y+1)+(y*1)
       if ( mat1[i][j] == 12345 ) {   //1(xy)
         vec1[l] = 12345;                 //1(xy)
         l = (l + 1) % n;                    //(1+1+1)(xy)
      }
}

T(xy)=1+1+(x+1)+x+x(1+(y+1)+y)+xy+xy+3xy
         =3+x+x+x(2+2y)+5xy
         =3+2x+2x+2xy+5xy
         =3+4x+7xy

T(xy)= 7xy+4x+3 --> O(xy)

Guarda en un vector los valores de la matriz que son 12345

Funci—n 2:
void f2 ( float mat1[][], int m, int n ) { 
   int mi = 0;                                              //1
   int mj = 0;                                              //1
   for ( int i = 0; i < m; i++ )                      //1+(m+1)+(m*1)
     for ( int j = 0; j < n; j++ )                     //m(1+(n+1)+(n*1))
       if ( mat1[i][j] > mat1[mi][mj] ) {       //1(mn)
          mi = i;                                              //1(mn)
          mj = j;                                              //1(mn)
      } 
   mat1[mi][mj] = 0,0;                                //1
}

T(mn)=1+1+(1+(m+1)+m)+m(1+(n+1)+n)+mn+mn+mn+1
          =5+2m+m(2+2n)+3mn
          =5+2m+2m+2mn+3mn
          =5+4m+5mn

T(mn)=5mn+4m+5 --> O(mn)

Asigna a dos variables coordenadas del valor mayor de una matriz y lo vuelve 0

Funci—n 3:
void f3 ( int mat[][], int m ) {  
  int vec[m];                        //1
  for ( int i = 0; i < m; i++ )      //1+(m+1)+(m*1)
    vec[i] = 0;                             //m*1
  for ( int i = 0; i < 3; i++ )        //1+(3+1)+(3*1)
    for ( int j = 0; j < m; j++ )     //3(1+(m+1)+(m*1)
      vec[j] = vec[j] + mat[j][i];  //3m(1+1)
}


T(m)=1+1+(m+1)+m+m+1+3(1+(m+1)+m)+6m
        =4+9m+3(2+2m)
        =4+9m+6+6m
        =10+15m

T(m)=15m+10 --> O(m)

Asigna 0 a los valores del vector, guarda en este la suma con una matriz.

Funci—n 4:
void f4 ( float mat[][], int m, int n ) { 
  float vec[m];                       //1   
  for ( int i = 0; i < m; i++ ) {    //1+(m+1)+(m*1)
    for ( int j = 0; j < n/2; j++ )   //m(1+(n/2+1)+(n/2*1)
     // no se hace nada 
    vec[i] = mat[i][j];                   //m*1
  }
}

T(mn)=1+1+(m+1)+m+m(1+(n/2+1)+n/2)+m
          =3+3m+m(2+n)
          =3+3m+2m+mn
          =3+5m+mn

T(mn)=mn+5m+3 --> O(mn)

No funciona, porque la variable jes creada en el segundo for y la asignaci—n de valores de la matriz al vetor se hace en el primer for.

Funci—n 5:
void f5 ( char mat[][], int m, int n ) {
   int vec[m];                     //1
   for ( int i = 0; i < m; i++ )   //1+(m+1)+(m*1)
     vec[i] = 0;                          //1*m
   for ( int i = 0; i < m; i++ )    //1+(m+1)+(m*1)
    for ( int j = 0; j < n; j++ )    //m(1+(n+1)+(n*1)
     if ( mat[i][j] == ??? ) {        //1*mn
       vec[i]++;                           //1*mn
     }
}

T(mn)=1+1+(m+1)+m+m+1+(m+1)+m+m(1+(n+1)+n)+mn+mn
          =5+4m+2mn+m(2+2n)
          =5+4m+2mn+2m+2mn
          =5+6m+4mn

T(mn)=4mn+6m+5 --> O(mn)

0 los valores del vector, +1 posici¢n i del vector si en la matriz ???




